/* *{
    margin: 0px;
    padding: 0px;
} */










/* 
position: relative ==> Means shifting & fixing an html element with respect/relative to its original position.
*/
h2{
    background-color: orange;
    position: relative;
    left: 100px;
    /* top:50px; */
    /* top right */
}
/* 
When an html element is marked as position: relative, it will reserved its original position space in the document flow
and no html element will occupy that space.
*/









/* 
position: fixed ==> Means, shifting & fixing an html element with respect/relative to browser's window.
*/
h3{
    background-color: pink;
    position: fixed; 
    top: 0px;
    left: 50px;
    z-index: 15;
}
/* 
When an html element is marked as position: fixed, it will leave its original position space in the document flow
and other html element can occupy that space, if needed.
*/












/* 
position: sticky ==> Means, fixing an html element with respect/relative to browser's window
to the "top" with some position while scrolling.
*/
h4{
    background-color: brown;
    position: sticky;
    top: 10px;
}
/* 
Means, when we scroll the page, the h4 element will stick to the top of the browser window
when it reaches the top, with a 10px gap from top of browser's window.
or
while scrolling the page, if the distance between the top of the browser's window and the h4 element is 10px,
then, the h4 element will stick to the top of the browser's window at 10px distance from browser's window.
*/












/* 
position: absolute ==> Means, shifting & fixing an html element with respect/relative to its nearest positioned(relative, fixed or sticky only) ancestor element.
If there is no positioned(relative, fixed or sticky only) ancestor element, then it will be positioned with respect/relative to the
initial containing block (html element) or browser window.
*/
p{
    background-color:chartreuse;
    position: absolute;
    left: 50px;
    top: 0px;
    margin: 0px;
    z-index: 20;
}
/* 
When an html element is marked as position: absolute, it will leave its original position space in the document flow
and other html element can occupy that space, if needed.
*/

/* 
z-index ==> It is used to manage overlapping of html elements.
if two html elements are overlapping each other, then the html element with higher z-index value will be on the top of the html element with lower z-index value.
By default, all html elements have z-index value of auto(0).
*/